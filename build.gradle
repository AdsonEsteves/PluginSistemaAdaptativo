//apply plugin: 'java'
//apply plugin: 'jacoco'
//apply plugin: 'application'
//
//
//mainClassName = 'br.univali.portugol.plugin.maspath.TesteTela'
//
//repositories {
//    jcenter()
//    mavenCentral()
//}
//
//dependencies {
//    testImplementation     'junit:junit:4.13'
//    compile fileTree(dir: 'libs', include: '*.jar')
//    
//    // https://mvnrepository.com/artifact/commons-codec/commons-codec
//    compile group: 'commons-codec', name: 'commons-codec', version: '1.6'
//    
//    // https://mvnrepository.com/artifact/org.apache.commons/commons-exec
//    compile group: 'org.apache.commons', name: 'commons-exec', version: '1.3'
//    
//    // https://mvnrepository.com/artifact/commons-io/commons-io
//    compile group: 'commons-io', name: 'commons-io', version: '2.4'
//    
//    // https://mvnrepository.com/artifact/commons-logging/commons-logging
//    compile group: 'commons-logging', name: 'commons-logging', version: '1.1.3'
//}

apply plugin: 'java'

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

jar {
    manifest {
        attributes "Main-Class": "br.univali.portugol.plugin.maspath"
    }
 
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task customFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'br.univali.portugol.plugin.maspath'
    }
    baseName = 'all-in-one-jar'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: '../portugol-studio/ide/build/libs')
    
    compile fileTree(include: ['*.jar'], dir: '../portugol-studio/core/build/libs')
    
    compile fileTree(include: ['*.jar'], dir: 'libs')
    
    //compile 'org.hid4java:hid4java:0.5.0'
    
    // https://mvnrepository.com/artifact/org.apache.commons/commons-exec
    compile group: 'org.apache.commons', name: 'commons-exec', version: '1.3'
    
    // https://mvnrepository.com/artifact/cglib/cglib
    compile group: 'cglib', name: 'cglib', version: '3.2.5'

    // https://mvnrepository.com/artifact/org.json/json
    implementation 'org.json:json:20200518'
    
   // testCompile group: 'junit', name: 'junit', version: '4.10'
}

task copyRuntimeLibs() {
    doLast {
        copy {
            into "build/libs/lib"
            from configurations.runtime
        }
    }
}

build.dependsOn copyRuntimeLibs
